@model IEnumerable<MVC1.Models.客戶銀行資訊>

@{
    ViewBag.Title = "客戶銀行資訊";
}

<h2>客戶銀行資訊</h2>

@using (Html.BeginForm("Index", "客戶銀行資訊", FormMethod.Get, new { name = "form1" }))
{
    <p>
        @Html.ActionLink("新增銀行資訊", "Create", new { }, new { @class = "button" })
        <input id="btnExport" type="submit" value="匯出客戶銀行資訊" formaction="@Url.Action("ExportExcel", "客戶銀行資訊")" class="button" />
        @Html.TextBox("keyword", "", new { placeholder = "請輸入關鍵字" })
        <input id="Search" type="submit" value="搜尋" class="button" />
    </p>

    <table class="table" border="1" style="width:100%">
        <tr>
            <th>
                @Html.ActionLink("客戶名稱", null)
            </th>
            <th>
                @Html.ActionLink("銀行名稱", null)
            </th>
            <th>
                @Html.ActionLink("銀行代碼", null)
            </th>
            <th>
                @Html.ActionLink("分行代碼", null)
            </th>
            <th>
                @Html.ActionLink("帳戶名稱", null)
            </th>
            <th>
                @Html.ActionLink("帳戶號碼", null)
            </th>

            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.客戶資料.客戶名稱)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.銀行名稱)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.銀行代碼)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.分行代碼)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.帳戶名稱)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.帳戶號碼)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }

    </table>
    @Html.Hidden("page")
    @Html.Hidden("Sort")
    @Html.Hidden("Sidx")
    @Html.PagedListPager(Model as IPagedList, page => Url.Action("Index", new { page }))
}


@if (TempData["CustBankSuccessMsg"] != null)
{
    <script>
        alert(@TempData["CustBankSuccessMsg"]);
    </script>
}
@section scripts {
    <script>
        $(function () {

            $('.pagination-container a').on('click', function () {
                var href = $(this).attr('href');
                var pid = href.substring(href.indexOf('?page=') + 6);
                document.form1.page.value = pid;
                document.form1.submit();
                return false;
            })

            $('th a').on('click', function () {
                if ($(this).text() == $("#Sort").val()) {
                    if ($("#Sidx").val() == "desc") {
                        $("#Sidx").val("asc");
                    }
                    else {
                        $("#Sidx").val("desc");
                    }
                }
                else {
                    $("#Sort").val($(this).text());
                    $("#Sidx").val("asc");
                }
                document.form1.submit();
                return false;
            })

            $("#btnExport").on('click', function () {                
                $("#btnExport").submit();
            });
        })

    </script>
}